/*
* This is a manifest file that'll be compiled into application.css, which will include all the files
* listed below.
*
* Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
* vendor/assets/stylesheets directory can be referenced here using a relative path.
*
* You're free to add application-wide styles to this file and they'll appear at the bottom of the
* compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
* files in this directory. Styles in this file should be added after the last require_* statement.
* It is generally better to create a new file per style scope.
*/

$custom-file-text: (
  placeholder: (
    zh-CN: "选择文件"
  ),
  button-label: (
    zh-CN: "浏览"
  )
);

$theme-green: #2dbd90;
$theme-blue: #588fcc;

// vendor
@import "bootstrap";
@import "slider";
@import "bootstrap-multiselect";
@import "font-awesome";

@import "attachments";
@import "chat_lines";
@import "instructor_infos";
@import "messages";
@import "search";
@import "user_infos";
@import "users";

body {
  padding-top: 6rem;
  background-color: #F0F0F0;
}

.main {
  background-color: #FFFFFF;
  padding: 2rem 2.5rem;
}

.text-green {
  color: #10ACB7;
}

.footer {
  padding-top: 3rem;
}

// support custom file inputs
.custom-file-name:after {
  content: attr(data-content) !important;
  position: absolute;
  top: 0px;
  left: 0px;
  display: block;
  height: 100%;
  overflow: hidden;
  padding: 0.5rem 1rem;
}

.tight-bottom {
  margin-bottom: 0.25rem;
}

.profile-image-thumbnail {
  border: 3px solid $gray-300;
  @extend .rounded-circle;
  width: 2rem;
  height: 2rem;
}
.profile-image-full {
  border: 3px solid $gray-300;
  @extend .rounded;
  width: 10rem;
  height: 10rem;
}

// not shown until navigation reaches it
.multi-step-form {
  display: none;
}
.current-step {
  display: block !important;
}

.editable-image-preview {
  max-width: 100%;
  display: block;
  margin: auto;
}

// remove dropdown menu caret on navigation bar
.no-caret:after {
  display: none;
}

.thin-scrollbar {
  &::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
    background-color: #F5F5F5;
  }
  &::-webkit-scrollbar {
    width: 6px;
    background-color: #F5F5F5;
  }
  &::-webkit-scrollbar-thumb {
    background-color: #000000;
  }
}

// show border and overlay fog when hover
.clickable {
  position: relative;
  border: 5px solid transparent;
  border-radius: 5px;
  &:hover {
    border-color: lighten($theme-blue, 30%);
    &:after {
      content: "\A";
      pointer-events: none;
      width: 100%;
      height: 100%;
      background: rgba(255,255,255,0.2);
      position: absolute;
      top: 0;
      left: 0;
    }
  }
}

// overlay non-clickable when hover
// useful because we only modify the container: the object beneath is not affected
// we can show the same underlying object on both general user and owner of the page
// but only show the container to the page owner.
.nonclickable:hover:after {
  pointer-events: all;
}

.editable {
  @extend .clickable;
}

// When this container is hoverred, a .hover-btn will be shown.
.hover-btn-container {
  position: relative;
  & .hover-btn {
    display: none;
  }
  &:hover .hover-btn {
    display: block;
  }
}

.pos-tr {
  position: absolute;
  right: 0;
  top: 0;
}

.fs-80 {
  font-size: 0.8rem;
}
